{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","currentDate","setState","console","log","toLocaleTimeString","prev","newName","props","clockName","oldName","clearInterval","className","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handleClick","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAc,IAAIL,KAExB,EAAKM,SAAS,CAAEP,KAAMM,IAEtBE,QAAQC,IAAIH,EAAYI,wBACvB,OAdP,gCAiBE,SAAmBC,GACjB,IAAMC,EAAUT,KAAKU,MAAMC,UACrBC,EAAUJ,EAAKG,UAEjBF,IAAYG,GACdP,QAAQC,IAAR,uBAA4BM,EAA5B,eAA0CH,MAtBhD,kCA0BE,WACER,OAAOY,cAAcb,KAAKD,WA3B9B,oBA8BE,WACE,IAAQY,EAAcX,KAAKU,MAAnBC,UACAd,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,qBAAKG,UAAU,cAAf,SACGjB,EAAKU,8BA3ChB,GAA2BQ,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACE3B,MAAQ,CACN4B,UAAU,EACVb,UAAWM,KAHf,EAMElB,QAAU,EANZ,EAoBE0B,YAAc,WACZ,EAAKrB,SAAS,CAAEoB,UAAU,KArB9B,uDAQE,WAAqB,IAAD,OAClBxB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKE,SAAS,CAAEO,UAAWM,QAC1B,MAEHS,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKzB,SAAS,CAAEoB,UAAU,OAE5BE,SAASC,iBAAiB,QAAS3B,KAAKyB,eAjB5C,oBAwBE,WACE,IAAQD,EAAaxB,KAAKJ,MAAlB4B,SAER,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECU,GACI,cAAC,EAAD,CAAOb,UAAWX,KAAKJ,MAAMe,mBAhC1C,GAAyBI,IAAMC,WCZ/Bc,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.f50b2a1e.chunk.js","sourcesContent":["import React from 'react';\n/* eslint-disable no-console */\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const currentDate = new Date();\n\n      this.setState({ date: currentDate });\n\n      console.log(currentDate.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prev: Props) {\n    const newName = this.props.clockName;\n    const oldName = prev.clockName;\n\n    if (newName !== oldName) {\n      console.log(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <div className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', this.handleClick);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n          && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}